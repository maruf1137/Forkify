{"mappings":"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","sources":["src/js/controller.js"],"sourcesContent":["const recipeContainer = document.querySelector('.recipe');\r\n\r\nconst timeout = function (s) {\r\n  return new Promise(function (_, reject) {\r\n    setTimeout(function () {\r\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\r\n    }, s * 1000);\r\n  });\r\n};\r\n\r\n// https://forkify-api.herokuapp.com/v2\r\n\r\n///////////////////////////////////////\r\n\r\nconst showRecipe = async () => {\r\n  // loaing recipe\r\n  try {\r\n    const res = await fetch(\r\n      'https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc990'\r\n    );\r\n    const data = await res.json();\r\n    if (!res.ok) throw new Error(`${data.message} (${res.status})`);\r\n\r\n    let { recipe } = data.data;\r\n    recipe = {\r\n      id: recipe.id,\r\n      title: recipe.title,\r\n      sourceUrl: recipe.source_url,\r\n      image: recipe.image_url,\r\n      cookingTime: recipe.cooking_time,\r\n      publisher: recipe.publisher,\r\n      servings: recipe.servings,\r\n      ingredients: recipe.ingredients,\r\n    };\r\n\r\n    // renering recipe\r\n    const markup = `\r\n  \r\n    <figure class=\"recipe__fig\">\r\n      <img src=${recipe.image} alt=\"${recipe.title}\" class=\"recipe__img\" />\r\n      <h1 class=\"recipe__title\">\r\n        <span>${recipe.title}</span>\r\n      </h1>\r\n    </figure>\r\n\r\n    <div class=\"recipe__details\">\r\n      <div class=\"recipe__info\">\r\n        <svg class=\"recipe__info-icon\">\r\n          <use href=\"src/img/icons.svg#icon-clock\"></use>\r\n        </svg>\r\n        <span class=\"recipe__info-data recipe__info-data--minutes\">${\r\n          recipe.cookingTime\r\n        }</span>\r\n        <span class=\"recipe__info-text\">minutes</span>\r\n      </div>\r\n      <div class=\"recipe__info\">\r\n        <svg class=\"recipe__info-icon\">\r\n          <use href=\"src/img/icons.svg#icon-users\"></use>\r\n        </svg>\r\n        <span class=\"recipe__info-data recipe__info-data--people\">${\r\n          recipe.servings\r\n        }</span>\r\n        <span class=\"recipe__info-text\">servings</span>\r\n\r\n        <div class=\"recipe__info-buttons\">\r\n          <button class=\"btn--tiny btn--increase-servings\">\r\n            <svg>\r\n              <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\r\n            </svg>\r\n          </button>\r\n          <button class=\"btn--tiny btn--increase-servings\">\r\n            <svg>\r\n              <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"recipe__user-generated\">\r\n        <svg>\r\n          <use href=\"src/img/icons.svg#icon-user\"></use>\r\n        </svg>\r\n      </div>\r\n      <button class=\"btn--round\">\r\n        <svg class=\"\">\r\n          <use href=\"src/img/icons.svg#icon-bookmark-fill\"></use>\r\n        </svg>\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"recipe__ingredients\">\r\n      <h2 class=\"heading--2\">Recipe ingredients</h2>\r\n      <ul class=\"recipe__ingredient-list\">\r\n\r\n      ${recipe.ingredients\r\n        .map(ing => {\r\n          return `\r\n          <li class=\"recipe__ingredient\">\r\n            <svg class=\"recipe__icon\">\r\n              <use href=\"src/img/icons.svg#icon-check\"></use>\r\n            </svg>\r\n            <div class=\"recipe__quantity\">${ing.quantity}</div>\r\n            <div class=\"recipe__description\">\r\n              <span class=\"recipe__unit\">${ing.unit}</span>\r\n              ${ing.description}\r\n            </div>\r\n          </li>\r\n        `;\r\n        })\r\n        .join('')}\r\n\r\n      </ul>\r\n    </div>\r\n\r\n    <div class=\"recipe__directions\">\r\n      <h2 class=\"heading--2\">How to cook it</h2>\r\n      <p class=\"recipe__directions-text\">\r\n        This recipe was carefully designed and tested by\r\n        <span class=\"recipe__publisher\">${\r\n          recipe.publisher\r\n        }</span>. Please check out\r\n        directions at their website.\r\n      </p>\r\n      <a\r\n        class=\"btn--small recipe__btn\"\r\n        href=\"${recipe.sourceUrl}\"\r\n        target=\"_blank\"\r\n      >\r\n        <span>Directions</span>\r\n        <svg class=\"search__icon\">\r\n          <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\r\n        </svg>\r\n      </a>\r\n    </div>\r\n    `;\r\n    recipeContainer.innerHTML = '';\r\n    recipeContainer.insertAdjacentHTML('afterbegin', markup);\r\n  } catch (error) {\r\n    alert(error);\r\n  }\r\n};\r\n\r\nshowRecipe();\r\n\r\n// const url =\r\n//   'https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc886';\r\n\r\n// const showRecipe = async () => {\r\n//   try {\r\n//     const response = await fetch(url);\r\n//     const data = await response.json();\r\n//     if (!response.ok) throw new Error(`${data.message} (${response.status})`);\r\n//     console.log(response, data);\r\n//   } catch (error) {\r\n//     alert(error);\r\n//   }\r\n// };\r\n\r\n// showRecipe();\r\n"],"names":[],"version":3,"file":"index.62406edb.js.map","sourceRoot":"/__parcel_source_root/"}